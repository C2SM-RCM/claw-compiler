#!/bin/bash

### Read configration file and library ###
OM_CX2X_DRIVER_CONF_DIR=@OM_CX2X_DRIVER_CONF_DIR@
. ${OM_CX2X_DRIVER_CONF_DIR}/clawc.conf
. ${OMNI_HOME}/libexec/omni_common_lib.sh
#. ${OMNI_HOME}/libexec/xmpf90_lib.sh

### Directory for saving intermediate files ###
PID=$$
TEMP_DIR=/tmp/__omni_tmp__${PID}
DEBUG_TEMP_DIR="__omni_tmp__"

### Default options ###
ENABLE_LINKER=false
ONLY_PP=false
ENABLE_CPP=false
VERBOSE=false
ENABLE_DEBUG=true
OUTPUT_TEMPORAL=false
DRY_RUN=false
STOP_PP=false
STOP_FRONTEND=false
STOP_TRANSLATOR=false
STOP_BACKEND=false
STOP_COMPILE=false

### Set options ###
# e.g.) xmpf90 -I/usr/lib a.f b.F c.f90 d.F90 e.o --tmp --Wlfoo lib.a -omp -o a.out
#
#  output_file="a.out"              # Output file
#  f_files="a.f b.F c.f90 d.F90"    # All fortran files
#  archive_files="lib.a"            # Archive files
#  obj_files="e.o"                  # Object files
#  other_args="-I/usr/lib"          # Options for Preprocessor, Compiler, and Linker
#
#  Note that "-omp" is extracted by xmpf90_set_parameters, and set "ENABLE_OPENMP".
#
# To deal with space-separator in options, the following variables are defined as an array (#278)
output_file=()
f_files=()
archive_files=()
obj_files=()
other_args=()

# Additional options defined by command line (e.g. --Wl..)
pp_add_opt=()
frontend_add_opt=()
xcode_translator_add_opt=()
native_add_opt=()
backend_add_opt=()
linker_add_opt=()
module_opt=()
trans_module_opt=()
include_opt=()

xmpf90_set_parameters ${@+"$@"}
omni_f_check_file_exist

### Create temporal directory ###
[ $ENABLE_DEBUG = true ] && TEMP_DIR=$DEBUG_TEMP_DIR
# Note that, if TEMP_DIR exists, the TEMP_DIR is not deleted (KAGEMAI #379)

omni_exec mkdir -p $TEMP_DIR
[ $ENABLE_DEBUG = true ] && echo "Create ${TEMP_DIR}/"

### Clean temporal directory before exit ###
omni_set_trap

### Preprocessor ###
[ $ONLY_PP = true -a -f "${output_file}" ] && omni_exec rm "${output_file}"
[ $ENABLE_CPP = true ] && OMNI_FPP_OPT="$OMNI_FPP_OPT $CPP_OPT"
for file in "${f_files[@]}"; do
    FILE=("${file}")
    FILE_NAME=`omni_f_norm_file_name "${FILE}"`     # ./hoge/fuga.F -> hoge_2f_fuga_2f_a
    EXT=${file##*.}
    FILE_PP=${TEMP_DIR}/"${FILE_NAME}".${EXT}

    if [ $EXT = "F90" -o $EXT = "F" -o $ENABLE_CPP = true ]; then
        # When ">" or ">>" is used, please use "omni_exec_echo" and "omni_exec_run" instead of "omni_exec".
	omni_exec_echo $OMNI_FPP_CMD "${include_opt[@]}" "${pp_add_opt[@]}" $OMNI_FPP_OPT "${other_args[@]}" "${FILE}" ">" "${FILE_PP}"
	omni_exec_run  $OMNI_FPP_CMD "${include_opt[@]}" "${pp_add_opt[@]}" $OMNI_FPP_OPT "${other_args[@]}" "${FILE}" > "${FILE_PP}"
        # AIX compiler cannot output file with ".i" suffix. So, ">" is used.

	if [ $ONLY_PP = true ]; then
	    if [ "${output_file}" = "" ]; then
		omni_exec cat "${FILE_PP}"
	    else
		omni_exec_echo cat "${FILE_PP_I}" ">>" "${output_file}"
		omni_exec_run  cat "${FILE_PP_I}" >> "${output_file}"
	    fi
	fi
    fi
done
[ $STOP_PP = true ] && exit 0;
[ $ONLY_PP = true -a $ENABLE_DEBUG = true ] && exit 0;            # xmpf90 -E --debug hoge.c (save $TMP_DIR)
[ $ONLY_PP = true ] && { omni_exec rm -rf $TEMP_DIR; exit 0; }  # xmpf90 -E hoge.c

### Frontend ###
for file in "${f_files[@]}"; do
    FILE=("${file}")
    FILE_NAME=`omni_f_norm_file_name "${FILE}"`     # ./hoge/fuga.F90 -> hoge_2f_fuga_2f_a
    EXT=${file##*.}

    if [ $EXT = "F90" -o $EXT = "F" -o $ENABLE_CPP = true ]; then
	FILE_PP=${TEMP_DIR}/"${FILE_NAME}".${EXT}
    else
	FILE_PP="${FILE}"
    fi
    FILE_IN_X=${TEMP_DIR}/"${FILE_NAME}"_${EXT}_in.xml

    omni_exec $OMNI_F2X_CMD "${include_opt[@]}" "${module_opt[@]}" "${frontend_add_opt[@]}" $OMNI_F2X_OPT "${FILE_PP}" -o "${FILE_IN_X}"
done
[ $STOP_FRONTEND = true ] && exit 0;

### Translator ###
for file in "${f_files[@]}"; do
    FILE=("${file}")
    FILE_NAME=`omni_f_norm_file_name "${FILE}"`     # ./hoge/fuga.f90 -> hoge_2f_fuga_2f_a
    EXT=${file##*.}
    FILE_IN_X=${TEMP_DIR}/"${FILE_NAME}"_${EXT}_in.xml
    FILE_OUT_X=${TEMP_DIR}/"${FILE_NAME}"_${EXT}_out.xml

    omni_exec $OMNI_FX2X_CMD $OMNI_FX2X_OPT "${xcode_translator_add_opt[@]}" "${module_opt[@]}" "${trans_module_opt[@]}" "${FILE_IN_X}" -o "${FILE_OUT_X}"
    # also create ${TEMP_DIR}/${FILE_NAME}_${EXT}_in.F90
    # Note : The BlueGene/Q 's mpi compiler can compile only *.F90 in XMP process.
    # So that remains .F90 extention after process of the native compilier.
done
[ $STOP_TRANSLATOR = true ] && exit 0;

### Backend ###
if [ $OUTPUT_TEMPORAL = true ]; then
    for file in "${f_files[@]}"; do
	FILE=("${file}")
	FILE_NAME=`omni_f_norm_file_name "${FILE}"`     # ./hoge/fuga.f90 -> hoge_2f_fuga_2f_a
	EXT=${file##*.}
	FILE_F90=${TEMP_DIR}/"${FILE_NAME}"_${EXT}_in.F90
	BASENAME=`basename $FILE .$EXT`

	omni_exec cp "${FILE_F90}" __omni_tmp__"${BASENAME}".${EXT}
	echo output __omni_tmp__"${BASENAME}".${EXT}
    done
fi
[ $STOP_BACKEND = true ] && exit 0;

### Delete temporal directory ###
[ $ENABLE_DEBUG = false ] && omni_exec rm -rf $TEMP_DIR

exit 0
